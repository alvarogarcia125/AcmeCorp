AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation template to deploy .NET Core API with an RDS SQL Server database

Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: ID of the existing VPC
  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: List of Subnet IDs in the selected VPC

Resources:
  # Security group for the ECS tasks
  ECSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for ECS tasks
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  # RDS Security Group
  RDSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for RDS instance
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 1433
          ToPort: 1433
          CidrIp: 0.0.0.0/0

  # RDS Database Instance
  RDSInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: 20
      DBInstanceClass: db.t3.micro
      Engine: sqlserver-se
      MasterUsername: admin
      MasterUserPassword: !Sub '{{resolve:ssm:/acmecorp/development/db/password}}'
      VPCSecurityGroups:
        - !GetAtt RDSSecurityGroup.GroupId
      DBName: acmecorp
      PubliclyAccessible: true

  # ECS Cluster
  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: AcmeCorpCluster

  # Task Definition
  ECSTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: AcmeCorpTask
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      Cpu: 256
      Memory: 512
      ExecutionRoleArn: !GetAtt ECSRole.Arn
      TaskRoleArn: !GetAtt ECSRole.Arn
      ContainerDefinitions:
        - Name: acmecorp-container
          Image: 684535228624.dkr.ecr.us-west-2.amazonaws.com/acmecorp-api:latest
          PortMappings:
            - ContainerPort: 80
          Environment:
            - Name: ASPNETCORE_ENVIRONMENT
              Value: Production
            - Name: ConnectionStrings__DefaultConnection
              Value: !Sub 'Server=${RDSInstance.Endpoint.Address},1433;Database=acmecorp;User Id=admin;Password={{resolve:ssm:/acmecorp/development/db/password}};'

  # ECS Service
  ECSService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref ECSCluster
      DesiredCount: 1
      LaunchType: FARGATE
      TaskDefinition: !Ref ECSTaskDefinition
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - !GetAtt ECSSecurityGroup.GroupId
          Subnets: !Ref SubnetIds

  # ECS IAM Role
  ECSRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: ecs-task-execution
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchGetImage
                  - ecr:BatchCheckLayerAvailability
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"

Outputs:
  ECSClusterName:
    Description: The name of the ECS Cluster
    Value: !Ref ECSCluster
  ECSServiceName:
    Description: The name of the ECS Service
    Value: !Ref ECSService
  RDSInstanceEndpoint:
    Description: The endpoint of the RDS instance
    Value: !GetAtt RDSInstance.Endpoint.Address
